"""Add category column to portfolio_images table

Revision ID: e4ad938536c3
Revises: 185457ff330e
Create Date: 2025-06-10 16:39:45.688794

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e4ad938536c3'
down_revision: Union[str, None] = '185457ff330e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('categories', 'code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('categories', 'type_code',
               existing_type=sa.VARCHAR(length=5),
               nullable=False)
    op.alter_column('categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('categories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_categories_type_code'), 'categories', ['type_code'], unique=False)
    op.create_index('ix_categories_type_code_code', 'categories', ['type_code', 'code'], unique=False)
    op.alter_column('category_skills', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('category_skills', 'skill_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index('ix_category_skills_category_id', 'category_skills', ['category_id'], unique=False)
    op.create_index('ix_category_skills_skill_id', 'category_skills', ['skill_id'], unique=False)
    op.drop_constraint('category_skills_skill_id_fkey', 'category_skills', type_='foreignkey')
    op.drop_constraint('category_skills_category_id_fkey', 'category_skills', type_='foreignkey')
    op.create_foreign_key(None, 'category_skills', 'categories', ['category_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'category_skills', 'skills', ['skill_id'], ['id'], ondelete='CASCADE')
    op.alter_column('category_texts', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('category_texts', 'language_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('category_texts', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('category_texts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('category_texts', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index('ix_category_texts_category_id', 'category_texts', ['category_id'], unique=False)
    op.create_index('ix_category_texts_category_language', 'category_texts', ['category_id', 'language_id'], unique=True)
    op.create_index('ix_category_texts_language_id', 'category_texts', ['language_id'], unique=False)
    op.create_unique_constraint('uq_category_texts_category_language', 'category_texts', ['category_id', 'language_id'])
    op.drop_constraint('category_texts_category_id_fkey', 'category_texts', type_='foreignkey')
    op.create_foreign_key(None, 'category_texts', 'categories', ['category_id'], ['id'], ondelete='CASCADE')
    op.alter_column('category_types', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('category_types', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('category_types', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_category_types_name'), 'category_types', ['name'], unique=False)
    op.create_index('ix_category_types_name_code', 'category_types', ['name', 'code'], unique=False)
    op.add_column('portfolio_images', sa.Column('category', sa.String(), nullable=True))
    op.alter_column('portfolio_images', 'portfolio_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('portfolio_images', 'image_path',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('portfolios', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('skill_types', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('skill_types', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('skill_types', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_skill_types_name'), 'skill_types', ['name'], unique=False)
    op.create_index('ix_skill_types_name_code', 'skill_types', ['name', 'code'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_skill_types_name_code', table_name='skill_types')
    op.drop_index(op.f('ix_skill_types_name'), table_name='skill_types')
    op.alter_column('skill_types', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('skill_types', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('skill_types', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('portfolios', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('portfolio_images', 'image_path',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('portfolio_images', 'portfolio_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('portfolio_images', 'category')
    op.drop_index('ix_category_types_name_code', table_name='category_types')
    op.drop_index(op.f('ix_category_types_name'), table_name='category_types')
    op.alter_column('category_types', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('category_types', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('category_types', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'category_texts', type_='foreignkey')
    op.create_foreign_key('category_texts_category_id_fkey', 'category_texts', 'categories', ['category_id'], ['id'])
    op.drop_constraint('uq_category_texts_category_language', 'category_texts', type_='unique')
    op.drop_index('ix_category_texts_language_id', table_name='category_texts')
    op.drop_index('ix_category_texts_category_language', table_name='category_texts')
    op.drop_index('ix_category_texts_category_id', table_name='category_texts')
    op.alter_column('category_texts', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('category_texts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('category_texts', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('category_texts', 'language_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('category_texts', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'category_skills', type_='foreignkey')
    op.drop_constraint(None, 'category_skills', type_='foreignkey')
    op.create_foreign_key('category_skills_category_id_fkey', 'category_skills', 'categories', ['category_id'], ['id'])
    op.create_foreign_key('category_skills_skill_id_fkey', 'category_skills', 'skills', ['skill_id'], ['id'])
    op.drop_index('ix_category_skills_skill_id', table_name='category_skills')
    op.drop_index('ix_category_skills_category_id', table_name='category_skills')
    op.alter_column('category_skills', 'skill_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('category_skills', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index('ix_categories_type_code_code', table_name='categories')
    op.drop_index(op.f('ix_categories_type_code'), table_name='categories')
    op.alter_column('categories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('categories', 'type_code',
               existing_type=sa.VARCHAR(length=5),
               nullable=True)
    op.alter_column('categories', 'code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
